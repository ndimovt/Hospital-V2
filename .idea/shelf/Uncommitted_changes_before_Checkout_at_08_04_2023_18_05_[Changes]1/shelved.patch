Index: src/main/java/io/github/ndimovt/hospitalv2/DataBaseOperations.java
IDEA additional info:
Subsystem: com.intellij.openapi.diff.impl.patch.BaseRevisionTextPatchEP
<+>package io.github.ndimovt.hospitalv2;\r\n\r\nimport java.sql.*;\r\nimport java.time.*;\r\nimport java.time.format.DateTimeFormatter;\r\npublic class DataBaseOperations {\r\n    private static DataBaseOperations dbo;\r\n\r\n    private DataBaseOperations() {\r\n    }\r\n\r\n    public static DataBaseOperations getInstance() {\r\n        if (dbo == null) {\r\n            dbo = new DataBaseOperations();\r\n        }\r\n        return dbo;\r\n    }\r\n\r\n    private static Connection getConnection() throws SQLException {\r\n        Connection DBConnection = null;\r\n        DBConnection = DriverManager.getConnection(\"jdbc:mysql://localhost:3306/hospital\", \"root\", \"sheeuser123456@\");\r\n        return DBConnection;\r\n    }\r\n\r\n    private String DateTime() {\r\n        DateTimeFormatter format = DateTimeFormatter.ofPattern(\"yyyy-MM-dd HH:mm:ss\");\r\n        LocalDateTime currentDateAndTime = LocalDateTime.now();\r\n        String dateAndTime = currentDateAndTime.format(format);\r\n        return dateAndTime;\r\n    }\r\n    protected void addDoctorsToDB(String forname, String fatherName, String surname, long egn, String address, long phoneNumber) throws SQLException {\r\n        Connection c = null;\r\n        PreparedStatement pst = null;\r\n        PreparedStatement pst1 = null;\r\n        try {\r\n            c = this.getConnection();\r\n            pst = c.prepareStatement(\"INSERT INTO doctors (forename,fathername,surname,EGN) VALUES(?,?,?,?)\");\r\n            pst1 = c.prepareStatement(\"INSERT INTO doctors_personal_data (EGN,address,phone_number,date_in) VALUES(?,?,?,?)\");\r\n            pst.setString(1, forname);\r\n            pst.setString(2, fatherName);\r\n            pst.setString(3, surname);\r\n            pst.setLong(4, egn);\r\n            pst1.setLong(1, egn);\r\n            pst1.setString(2, address);\r\n            pst1.setLong(3, phoneNumber);\r\n            pst1.setString(4, dbo.DateTime());\r\n            pst.executeUpdate();\r\n            pst1.executeUpdate();\r\n            System.out.println(\"Doctor added to database\");\r\n        } finally {\r\n        if (c != null) {\r\n            c.close();\r\n        }\r\n        if (pst != null) {\r\n            pst.close();\r\n        }\r\n        if (pst1 != null) {\r\n            pst1.close();\r\n        }\r\n    }\r\n    }\r\n    protected void addNursesToDB(String forname, String fatherName, String surname, long egn, String address, long phoneNumber) throws SQLException{\r\n        Connection c = null;\r\n        PreparedStatement pst = null;\r\n        PreparedStatement pst1 = null;\r\n        try{\r\n            c = this.getConnection();\r\n            pst = c.prepareStatement(\"INSERT INTO nurses (forename,fathername,surname,EGN) VALUES(?,?,?,?)\");\r\n            pst1 = c.prepareStatement(\"INSERT INTO nurses_personal_data (EGN,address,phone_number,date_in) VALUES(?,?,?,?)\");\r\n            pst.setString(1, forname);\r\n            pst.setString(2, fatherName);\r\n            pst.setString(3, surname);\r\n            pst.setLong(4, egn);\r\n            pst1.setLong(1, egn);\r\n            pst1.setString(2, address);\r\n            pst1.setLong(3, phoneNumber);\r\n            pst1.setString(4, dbo.DateTime());\r\n            pst.executeUpdate();\r\n            pst1.executeUpdate();\r\n            System.out.println(\"Nurse added to database\");\r\n        }finally {\r\n            if(c != null){\r\n                c.close();\r\n            }if(pst != null){\r\n                pst.close();\r\n            }if(pst1 != null){\r\n                pst1.close();\r\n            }\r\n        }\r\n    }\r\n    protected void addPatientToDB(String forname, String fatherName, String surname, long egn, String address) throws SQLException{\r\n        Connection c = null;\r\n        PreparedStatement pst = null;\r\n        PreparedStatement pst1 = null;\r\n        try{\r\n            c = this.getConnection();\r\n            pst = c.prepareStatement(\"INSERT INTO patients(forename, fathername, surname, EGN) VALUES(?,?,?,?)\");\r\n            pst1 = c.prepareStatement(\"INSERT INTO patients_personal_data (EGN, adress, date_in) VALUES(?,?,?)\");\r\n            pst.setString(1,forname);\r\n            pst.setString(2,fatherName);\r\n            pst.setString(3,surname);\r\n            pst.setLong(4, egn);\r\n            pst1.setLong(1,egn);\r\n            pst1.setString(2,address);\r\n            pst1.setString(3, dbo.DateTime());\r\n            pst.executeUpdate();\r\n            pst1.executeUpdate();\r\n            System.out.println(\"Patient successfully added to DataBase\");\r\n        }finally {\r\n            if(c != null){\r\n                c.close();\r\n            }if(pst != null){\r\n                pst.close();\r\n            }if(pst1 != null){\r\n                pst1.close();\r\n            }\r\n        }\r\n    }\r\n    protected void updatePatient(long egn,String illness, String treatment) throws SQLException {\r\n        Connection c = null;\r\n        PreparedStatement pst = null;\r\n        try{\r\n            c = this.getConnection();\r\n            pst = c.prepareStatement(\"UPDATE patients_personal_data SET illness = ? ,treatment = ? WHERE EGN ='\"+egn+\"'\");\r\n            pst.setString(1,illness);\r\n            pst.setString(2,treatment);\r\n            pst.executeUpdate();\r\n            System.out.println(\"Patient's info successfully updated\");\r\n        } finally{\r\n            if(c != null){\r\n                c.close();\r\n            }if(pst != null){\r\n                pst.close();\r\n            }\r\n        }\r\n    }\r\n    protected void releasePatient(long egn) throws SQLException{\r\n        Connection c = null;\r\n        PreparedStatement pst = null;\r\n        try{\r\n            c  = this.getConnection();\r\n            pst = c.prepareStatement(\"UPDATE patients_personal_data SET date_out = ? WHERE EGN ='\"+egn+\"'\");\r\n            pst.setString(1, dbo.DateTime());\r\n            pst.executeUpdate();\r\n            System.out.println(\"Patient successfully released\");\r\n        }finally {\r\n            if(c != null){\r\n                c.close();\r\n            }if(pst != null){\r\n                pst.close();\r\n            }\r\n        }\r\n    }\r\n    protected void releaseDoctor(long egn) throws SQLException{\r\n        Connection doctorConnection = null;\r\n        PreparedStatement doctorPst = null;\r\n        try{\r\n            doctorConnection  = this.getConnection();\r\n            doctorPst = doctorConnection.prepareStatement(\"UPDATE doctors_personal_data SET date_out = ? WHERE EGN ='\"+egn+\"'\");\r\n            doctorPst.setString(1, dbo.DateTime());\r\n            doctorPst.executeUpdate();\r\n            System.out.println(\"Operation is successful\");\r\n        }finally {\r\n            if(doctorConnection != null){\r\n                doctorConnection.close();\r\n            }if(doctorPst != null){\r\n                doctorPst.close();\r\n            }\r\n        }\r\n    }\r\n    protected void releaseNurse(long egn) throws SQLException {\r\n        Connection nurseConnection = null;\r\n        PreparedStatement nursePst = null;\r\n        try{\r\n            nurseConnection  = this.getConnection();\r\n            nursePst = nurseConnection.prepareStatement(\"UPDATE nurses_personal_data SET date_out = ? WHERE EGN ='\"+egn+\"'\");\r\n            nursePst.setString(1, dbo.DateTime());\r\n            nursePst.executeUpdate();\r\n            System.out.println(\"Operation is successful\");\r\n        }finally {\r\n            if(nurseConnection != null){\r\n                nurseConnection.close();\r\n            }if(nursePst != null){\r\n                nursePst.close();\r\n            }\r\n        }\r\n    }\r\n\r\n    protected void checkPatientsInfo(){\r\n        Connection c = null;\r\n        ResultSet rs = null;\r\n        PreparedStatement ps = null;\r\n        try{\r\n            c = this.getConnection();\r\n            ps = c.prepareStatement(\"\"\"\r\n                    SELECT p.forename, p.fathername, p.surname, p.EGN, ppd.adress, ppd.illness, ppd.treatment, ppd.date_in\r\n                    FROM patients p\r\n                    JOIN patients_personal_data ppd ON p.EGN = ppd.EGN\r\n                    \"\"\");\r\n            rs = ps.executeQuery();\r\n            while(rs.next()){\r\n                Patient p = new Patient(rs.getString(\"forename\"),\r\n                        rs.getString(\"fathername\"),\r\n                        rs.getString(\"surname\"),\r\n                        rs.getLong(\"EGN\"),\r\n                        rs.getString(\"adress\"),\r\n                        rs.getString(\"illness\"),\r\n                        rs.getString(\"treatment\"),\r\n                        rs.getString(\"date_in\") );\r\n                System.out.println(p);\r\n            }\r\n        }catch (SQLException e){\r\n            e.printStackTrace();\r\n        }\r\n    }\r\n\r\n}\r\n
Subsystem: com.intellij.openapi.diff.impl.patch.CharsetEP
<+>UTF-8
===================================================================
diff --git a/src/main/java/io/github/ndimovt/hospitalv2/DataBaseOperations.java b/src/main/java/io/github/ndimovt/hospitalv2/DataBaseOperations.java
--- a/src/main/java/io/github/ndimovt/hospitalv2/DataBaseOperations.java	
+++ b/src/main/java/io/github/ndimovt/hospitalv2/DataBaseOperations.java	
@@ -9,7 +9,7 @@
     private DataBaseOperations() {
     }
 
-    public static DataBaseOperations getInstance() {
+    public static synchronized DataBaseOperations getInstance() {
         if (dbo == null) {
             dbo = new DataBaseOperations();
         }
